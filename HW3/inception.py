# -*- coding: utf-8 -*-
"""inception.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q23yn3BLRrG5NOI_CftI6n1ELr0eXuf6
"""

!pip install tensorflow==1.14.0
import tensorflow as tf
print(tf.__version__)

import tensorflow as tf
import pickle
import numpy as np
import matplotlib.pyplot as plt
tf.__version__

from google.colab import drive
drive.mount('/content/drive')

cd drive

cd My\ Drive

cd Colab\ Notebooks

import inception_score
import fid

cd ..

def read_image():
    f=open('gan_dataset/data_batch_'+str(1),'rb')
    data=pickle.load(f,encoding='bytes')
    image_input=data[b'data']

    for i in range(2,6):
        f=open('gan_dataset/data_batch_'+str(i),'rb')
        data=pickle.load(f,encoding='bytes')
        image_input=np.concatenate((image_input,data[b'data']),axis=0)
        f.close()

    return image_input

image_input=read_image()

image_input2=[]
for i in image_input:
    image_input2.append(np.repeat(np.repeat(i,2).reshape(32*3,64),2,axis=0).reshape(3,64,64))

image_input3=np.array(image_input2).reshape(50000,3,64,64)

import os
c=os.listdir('dcgan_result/')
d=os.listdir('wgan_result/')

result_inception=[]
result_fid=[]
for i in c:
  if i.endswith('.p'):
    print(i)
    f=open('dcgan_result/'+i,mode='rb')
    images=pickle.load(f)
    f.close()
    images2=[]
    for j in images:
        images2.append(np.int32(np.reshape(j.reshape(64,64,3),64*64*3,order='f')*255))

    images3=np.array(images2).reshape(64,3,64,64)

    m=inception_score.get_inception_score(images3[0:64], splits=10)
    n=fid.get_fid(images3[0:64],image_input3[0:64])
    
    print(m,n)
    result_inception.append(m)
    result_fid.append(n)
    print('\n')

for i in d:
  if i.endswith('.p'):
    print(i)
    f=open('wgan_result/'+i,mode='rb')
    images=pickle.load(f)
    f.close()
    images2=[]
    for j in images:
        images2.append(np.int32(np.reshape(j.reshape(64,64,3),64*64*3,order='f')*255))

    images3=np.array(images2).reshape(64,3,64,64)
    images3=np.maximum(0,images3)
    m=inception_score.get_inception_score(images3[0:64], splits=10)
    n=fid.get_fid(images3[0:64],image_input3[0:64])
    
    print(m,n)
    result_inception.append(m)
    result_fid.append(n)
    print('\n')